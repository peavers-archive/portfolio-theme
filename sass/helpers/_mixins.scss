// scss-lint:disable all
@function parse-int($n) {
  @return $n / ($n * 0 + 1);
}

@mixin safe-rem($property, $values) {
  $rem-base: 16;
  $px: ();
  $rem: ();

  @each $value in $values {
    @if $value == 0 or $value == auto {
      $px: append($px, $value);
      $rem: append($rem, $value);
    } @else {
      $unit: unit($value);
      $val: parse-int($value);
      $px: append($px, $value + px);
      $rem: append($rem, ($val / $rem-base + rem));
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}

// Font imports
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    src: url('#{$file-path}.eot');
    src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'), url('#{$file-path}.svg##{$font-family}') format('svg'), url('#{$file-path}.woff') format('woff'), url('#{$file-path}.ttf') format('truetype');
  }
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

//Border
@mixin border-radius($radius) {
  -webkit-border-radius: $radius + px;
  border-radius: $radius + px;
  background-clip: padding-box;
}

// Single side border-radius
@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius + px;
  border-top-right-radius: $radius + px;
  -webkit-border-top-left-radius: $radius + px;
  border-top-left-radius: $radius + px;
  background-clip: padding-box;
}

@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius + px;
  border-bottom-right-radius: $radius + px;
  -webkit-border-top-right-radius: $radius + px;
  border-top-right-radius: $radius + px;
  background-clip: padding-box;
}

@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius + px;
  border-bottom-right-radius: $radius + px;
  -webkit-border-bottom-left-radius: $radius + px;
  border-bottom-left-radius: $radius + px;
  background-clip: padding-box;
}

@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius + px;
  border-bottom-left-radius: $radius + px;
  -webkit-border-top-left-radius: $radius + px;
  border-top-left-radius: $radius + px;
  background-clip: padding-box;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow: inset $top $left $blur $color;
    -moz-box-shadow: inset $top $left $blur $color;
    box-shadow: inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin icon($unicode) {
  @extend %icon;
  content: '\#{$unicode}';
}

@mixin animate-slide() {
  -webkit-animation-name: slide;
  -webkit-animation-timing-function: ease-in-out;
  -webkit-animation-delay: .25s;
  -webkit-animation-duration: 1.25s;
  -webkit-animation-fill-mode: both;
  -webkit-animation-iteration-count: 1;
}

@mixin animate-drop() {
  position: relative;
  opacity: 0;
  -webkit-animation-name: drop;
  -webkit-animation-timing-function: ease-in-out;
  -webkit-animation-delay: 1s;
  -webkit-animation-duration: 1s;
  -webkit-animation-fill-mode: forwards;
  -webkit-animation-iteration-count: 1;
}

@mixin animate-screen() {
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  opacity: 0;
  -webkit-animation-name: screen;
  -webkit-animation-timing-function: ease-in-out;
  -webkit-animation-duration: 1s;
  -webkit-animation-fill-mode: forwards;
  -webkit-animation-iteration-count: 1;
}

@mixin delay($time) {
  -webkit-animation-delay: $time;
}

// scss-lint:enable all
